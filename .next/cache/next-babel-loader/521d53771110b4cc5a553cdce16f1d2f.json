{"ast":null,"code":"var __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport TopNavigation from \"../nav\";\nimport SubNav from \"../../components/subnav\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useCookies } from \"react-cookie\";\nconst Container = styled(motion.div).withConfig({\n  displayName: \"wrapper__Container\",\n  componentId: \"sc-1twlypj-0\"\n})([\"display:grid;grid-template-rows:100px 1fr;grid-template-columns:1fr minmax(auto,100%) 1fr;position:absolute;min-height:100vh;top:0;right:0;bottom:0;left:0;\"]);\n\nconst Wrapper = ({\n  children,\n  props\n}) => {\n  const [cookies] = useCookies([]);\n  const [user, setUser] = React.useState({});\n  let access_token = cookies.access_token;\n  let authState;\n\n  if (props === undefined) {\n    authState = false;\n  } else if (props.auth === true) {\n    authState = true;\n  } else {\n    authState = false;\n  } // Do this if you want page transitions\n\n\n  const variants = {\n    out: {\n      opacity: 0,\n      y: 0,\n      transition: {\n        duration: 1\n      }\n    },\n    in: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 1,\n        delay: 1\n      }\n    },\n    initial: {\n      opacity: 0,\n      y: 0,\n      transition: {\n        duration: 1\n      }\n    }\n  };\n  return __jsx(Container, null, __jsx(TopNavigation, {\n    user: user,\n    auth: authState\n  }), children);\n};\n\nWrapper.getInitialProps = async () => {\n  return {};\n};\n\nexport default Wrapper;","map":null,"metadata":{},"sourceType":"module"}