{"ast":null,"code":"var __jsx = React.createElement;\nimport Wrapper from \"../../components/layout/wrapper\";\nimport { Button } from \"../../components/button\";\nimport { asyncFetch } from \"../../components/fetchHelper\";\nimport Router, { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { ContainerActivityDetail } from \"../../components/layout/container\";\nimport React from \"react\";\nimport Skeleton from \"../../components/skeleton\";\nimport dynamic from \"next/dynamic\";\nimport moment from \"moment\";\nimport { SummaryCard } from \"../../components/activity-detail/summary-card\";\nimport { AuthContext } from \"../_app\";\nimport RenderLineChart from \"../../components/activityCharts\";\nconst MetaDescription = styled.p.withConfig({\n  displayName: \"activity__MetaDescription\",\n  componentId: \"sc-5yd8zt-0\"\n})([\"opacity:0.5;margin:0;\"]);\nconst PageHeader = styled.h3.withConfig({\n  displayName: \"activity__PageHeader\",\n  componentId: \"sc-5yd8zt-1\"\n})([\"margin-top:\", \";margin-bottom:\", \";\"], props => props.theme.tokens.spacing.L.value, props => props.theme.tokens.spacing.M.value);\nconst ActivityDetailLongScroll = styled.div.withConfig({\n  displayName: \"activity__ActivityDetailLongScroll\",\n  componentId: \"sc-5yd8zt-2\"\n})([\"padding:\", \";padding-top:100px;max-width:1024px;@media (max-width:\", \"){padding:\", \";padding-top:100px;}\"], props => props.theme.tokens.spacing.XL.value, props => props.theme.tokens.mediaQueries.small, props => props.theme.tokens.spacing.L.value);\nconst DynamicMapboxLargeComponent = dynamic(() => import(\"../../components/activityDetailMap\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../components/activityDetailMap\")],\n    modules: [\"../../components/activityDetailMap\"]\n  }\n});\nconst DynamicMapboxSmallComponent = dynamic(() => import(\"../../components/activityDetailMapMini\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../components/activityDetailMapMini\")],\n    modules: [\"../../components/activityDetailMapMini\"]\n  }\n});\nconst LargeMapContainer = styled.div.withConfig({\n  displayName: \"activity__LargeMapContainer\",\n  componentId: \"sc-5yd8zt-3\"\n})([\"display:block;width:100%;height:100%;position:relative;@media (max-width:\", \"){display:none;}\"], props => props.theme.tokens.mediaQueries.small);\nconst SmallMapContainer = styled.div.withConfig({\n  displayName: \"activity__SmallMapContainer\",\n  componentId: \"sc-5yd8zt-4\"\n})([\"width:100%;height:100%;position:relative;display:none;margin-top:\", \";margin-bottom:\", \";border-radius:\", \";overflow:hidden;@media (max-width:\", \"){display:block;}\"], props => props.theme.tokens.spacing.L.value, props => props.theme.tokens.spacing.L.value, props => props.theme.tokens.borderRadius.value, props => props.theme.tokens.mediaQueries.small);\n\nconst ActivityDetail = props => {\n  const router = useRouter();\n  const {\n    activity\n  } = router.query;\n  let [loading, setLoading] = React.useState(true);\n  let [activitySummary, setActivitySummary] = React.useState([]);\n  let [activityStream, setActivityStream] = React.useState([]);\n  const value = React.useContext(AuthContext);\n  const cookies = value.cookies;\n  let currentTime = Date.now() / 1000;\n  let access_token = cookies.access_token;\n  let expires_at = cookies.expires_at;\n  React.useEffect(() => {\n    let activityFetchUrl = \"https://www.strava.com/api/v3/activities/\" + activity;\n    let activityStreamFetchUrl = activityFetchUrl + \"/streams/watts,altitude,heartrate,latlng,cadence,velocity_smooth?resolution=low\";\n    let fetchUrls = [activityFetchUrl, activityStreamFetchUrl];\n    Promise.all(fetchUrls.map(url => fetch(url, {\n      method: \"get\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: \"Bearer \" + access_token\n      }\n    }))).then(responses => Promise.all(responses.map(res => res.json()))).then(([summary, stream]) => {\n      setActivitySummary(summary);\n      setActivityStream(stream);\n      setLoading(false);\n    });\n  }, [value]);\n  let activityStartTime = moment(activitySummary.start_date_local);\n  let friendlyFormat = activityStartTime.format(\"MMM Do YYYY [at] h:mm a\");\n  return __jsx(Wrapper, {\n    props: props\n  }, __jsx(ContainerActivityDetail, null, __jsx(ActivityDetailLongScroll, null, loading ? __jsx(Skeleton, null) : __jsx(\"div\", null, __jsx(Button, {\n    onClick: () => {\n      Router.back();\n    },\n    label: \"‚Üê Back\"\n  }), __jsx(PageHeader, null, activitySummary.name), __jsx(MetaDescription, null, friendlyFormat), __jsx(\"p\", null, activitySummary.description), activitySummary.start_latlng ? __jsx(SmallMapContainer, null, __jsx(DynamicMapboxSmallComponent, {\n    activitySummary: activitySummary\n  })) : __jsx(\"div\", null), __jsx(RenderLineChart, {\n    data: activityStream\n  }), __jsx(SummaryCard, {\n    activitySummary: activitySummary\n  }))), activitySummary.start_latlng ? __jsx(LargeMapContainer, null, __jsx(DynamicMapboxLargeComponent, {\n    activitySummary: activitySummary\n  })) : __jsx(\"div\", null)));\n};\n\nexport default ActivityDetail;","map":null,"metadata":{},"sourceType":"module"}