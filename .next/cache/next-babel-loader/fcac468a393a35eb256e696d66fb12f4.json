{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { useAuthState } from \"../../pages/_app\";\nvar Summary = styled.div.withConfig({\n  displayName: \"summary-card__Summary\",\n  componentId: \"sc-755v8d-0\"\n})([\"padding:\", \";background:\", \"};border-radius:\", \";margin:\", \" 0;overflow:hidden;@media (max-width:\", \"){padding:0;}\"], function (props) {\n  return props.theme.tokens.spacing.L.value;\n}, function (props) {\n  return props.theme.colors.cardBackground;\n}, function (props) {\n  return props.theme.tokens.borderRadius.value;\n}, function (props) {\n  return props.theme.tokens.spacing.L.value;\n}, function (props) {\n  return props.theme.tokens.mediaQueries.small;\n});\nvar MetaGroup = styled.div.withConfig({\n  displayName: \"summary-card__MetaGroup\",\n  componentId: \"sc-755v8d-1\"\n})([\"display:flex;flex-direction:column;margin-right:\", \";@media (max-width:\", \"){margin-right:\", \";flex-direction:row-reverse;padding:\", \";width:100%;justify-content:flex-end;border-bottom:1px solid \", \"};}&:last-of-type{border-bottom:none;}\"], function (props) {\n  return props.theme.tokens.spacing.L.value;\n}, function (props) {\n  return props.theme.tokens.mediaQueries.small;\n}, function (props) {\n  return props.theme.tokens.spacing.L.value;\n}, function (props) {\n  return props.theme.tokens.spacing.M.value;\n}, function (props) {\n  return props.theme.colors.background;\n});\nvar MetaHeader = styled.p.withConfig({\n  displayName: \"summary-card__MetaHeader\",\n  componentId: \"sc-755v8d-2\"\n})([\"margin-top:0;margin-bottom:3px;\"]);\nvar MetaDescription = styled.p.withConfig({\n  displayName: \"summary-card__MetaDescription\",\n  componentId: \"sc-755v8d-3\"\n})([\"opacity:0.5;margin:0;@media (max-width:\", \"){margin-right:\", \";width:70px;}\"], function (props) {\n  return props.theme.tokens.mediaQueries.small;\n}, function (props) {\n  return props.theme.tokens.spacing.L.value;\n});\nvar MetaRowLarge = styled.div.withConfig({\n  displayName: \"summary-card__MetaRowLarge\",\n  componentId: \"sc-755v8d-4\"\n})([\"display:flex;@media (max-width:\", \"){margin-right:\", \";flex-direction:column;width:100%;}\"], function (props) {\n  return props.theme.tokens.mediaQueries.small;\n}, function (props) {\n  return props.theme.tokens.spacing.L.value;\n}); // Rounding helper\n\nfunction round_to_precision(x, precision) {\n  var y = +x + (precision === undefined ? 0.5 : precision / 2);\n  return y - y % (precision === undefined ? 1 : +precision);\n}\n\nexport var SummaryCard = function SummaryCard(props) {\n  var data = props.activitySummary;\n\n  var _useAuthState = useAuthState(),\n      user = _useAuthState.user; // Start time\n\n\n  var activityStartTime = moment(data.start_date_local);\n  var friendlyFormat = activityStartTime.format(\"MMM Do YYYY [at] h:mm a\"); // Distance\n\n  var activityDistance = round_to_precision(data.distance / 1000, 0.5);\n  var activityDistanceImperial = round_to_precision(data.distance / 1000 * 0.621371, 0.5);\n  var displayActivityDistance = user.measurement_preference == \"meters\" ? activityDistance : activityDistanceImperial;\n  var displayActivityDistanceUnit = user.measurement_preference == \"meters\" ? \"km\" : \"mi\"; // Elevation Gain\n\n  var activityTotalElevationGain = round_to_precision(data.total_elevation_gain, 0.5);\n  var activityTotalElevationGainImperial = round_to_precision(data.total_elevation_gain * 3.28084, 0.5);\n  var displayActivityTotalElevationGain = user.measurement_preference == \"meters\" ? activityTotalElevationGain : activityTotalElevationGainImperial;\n  var displayActivityTotalElevationGainUnit = user.measurement_preference == \"meters\" ? \"m\" : \"ft\"; // Moving Time\n\n  var activityMovingTime = moment.duration(data.moving_time, \"seconds\");\n  var activityMovingTimeHours = activityMovingTime.get(\"hours\");\n  var activityMovingTimeMinutes = activityMovingTime.get(\"minutes\");\n  var activityMovingTimeSeconds = activityMovingTime.get(\"seconds\"); // Calories\n\n  var activityCalories = parseInt(data.calories);\n  var formatedCalories = activityCalories.toLocaleString(); // Kudos\n\n  var activityKudos = data.kudos_count;\n  return __jsx(Summary, null, __jsx(MetaRowLarge, null, __jsx(MetaGroup, null, __jsx(MetaHeader, null, displayActivityDistance, \" \", displayActivityDistanceUnit), __jsx(MetaDescription, null, \"Distance\")), __jsx(MetaGroup, null, __jsx(MetaHeader, null, displayActivityTotalElevationGain, \" \", displayActivityTotalElevationGainUnit), __jsx(MetaDescription, null, \"Elevation\")), __jsx(MetaGroup, null, __jsx(MetaHeader, null, activityMovingTimeHours, \":\", activityMovingTimeMinutes, \":\", activityMovingTimeSeconds), __jsx(MetaDescription, null, \"Duration\")), __jsx(MetaGroup, null, __jsx(MetaHeader, null, formatedCalories), __jsx(MetaDescription, null, \"Calories\")), __jsx(MetaGroup, null, __jsx(MetaHeader, null, activityKudos), __jsx(MetaDescription, null, \"Kudos\"))));\n};","map":null,"metadata":{},"sourceType":"module"}