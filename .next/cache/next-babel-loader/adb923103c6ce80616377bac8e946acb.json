{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport Router from \"next/router\";\nimport Skeleton from \"../components/skeleton\";\nimport React from \"react\";\nimport Wrapper from \"../components/layout/wrapper\";\nimport SubNav from \"../components/subnav\";\nimport { StatCard } from \"../components/achievements/card\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport moment from \"moment\";\nimport { AuthContext, useAuthState } from \"./_app\";\nimport { asyncFetch } from \"../components/fetchHelper\";\nvar Container = styled.div.withConfig({\n  displayName: \"stats__Container\",\n  componentId: \"sc-1b3mbw8-0\"\n})([\"background-color:\", \";padding:\", \";position:relative;padding-top:0;grid-column-start:2;grid-column-end:3;grid-row-start:2;grid-row-end:3;grid-gap:\", \";display:grid;grid-template-columns:200px 1fr;@media (max-width:\", \"){display:grid;min-width:auto;width:100%;grid-gap:\", \";grid-template-rows:60px 1fr;grid-template-columns:1fr;grid-column-start:1;grid-column-end:4;padding:\", \";padding-top:0;}\"], function (props) {\n  return props.theme.colors.background;\n}, function (props) {\n  return props.theme.tokens.spacing.XL.value;\n}, function (props) {\n  return props.theme.tokens.spacing.XXL.value;\n}, function (props) {\n  return props.theme.tokens.mediaQueries.small;\n}, function (props) {\n  return props.theme.tokens.spacing.XL.value;\n}, function (props) {\n  return props.theme.tokens.spacing.L.value;\n});\nvar PageHeader = styled.h3.withConfig({\n  displayName: \"stats__PageHeader\",\n  componentId: \"sc-1b3mbw8-1\"\n})([\"margin-top:0;margin-bottom:\", \";\"], function (props) {\n  return props.theme.tokens.spacing.L.value;\n});\nvar StatsGrid = styled(motion.div).withConfig({\n  displayName: \"stats__StatsGrid\",\n  componentId: \"sc-1b3mbw8-2\"\n})([\"display:grid;grid-template-columns:repeat(auto-fill,minmax(350px,1fr));grid-auto-rows:minmax(150px,auto);grid-gap:\", \";@media (max-width:\", \"){grid-template-columns:1fr;}\"], function (props) {\n  return props.theme.tokens.spacing.XL.value;\n}, function (props) {\n  return props.theme.tokens.mediaQueries.small;\n});\n\nvar Stats = function Stats(props) {\n  // States\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      stats = _React$useState4[0],\n      setStats = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      totalMovingTime = _React$useState6[0],\n      setTotalMovingTime = _React$useState6[1];\n\n  var _useAuthState = useAuthState(),\n      user = _useAuthState.user; // Cookies\n  // const { cookies } = props;\n\n\n  var value = React.useContext(AuthContext);\n  var cookies = value.cookies;\n  var access_token = cookies.access_token; // Stats\n\n  React.useEffect(function () {\n    var athleteActivityStatsFetchUrl = \"https://www.strava.com/api/v3/athletes/\" + user.id + \"/stats\";\n    asyncFetch(athleteActivityStatsFetchUrl, access_token).then(function (data) {\n      return data.json();\n    }).then(function (json) {\n      setStats(json);\n      var duration = moment.duration(json.all_ride_totals.moving_time, \"seconds\");\n      var durationAsHours = duration.asHours();\n\n      function round(value, decimals) {\n        return Number(Math.round(value + \"e\" + decimals) + \"e-\" + decimals);\n      }\n\n      setTotalMovingTime(round(durationAsHours, 1)); // 1.01);\n\n      setLoading(false);\n    });\n  }, []);\n  var parentVariants = {\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    },\n    hide: {\n      opacity: 0\n    }\n  };\n  return __jsx(Wrapper, {\n    props: props\n  }, __jsx(Container, null, __jsx(SubNav, null), __jsx(\"div\", null, loading ? __jsx(Skeleton, null) : __jsx(AnimatePresence, null, __jsx(StatsGrid, {\n    exit: {\n      opacity: 0\n    },\n    initial: \"hide\",\n    variants: parentVariants,\n    animate: \"show\"\n  }, __jsx(StatCard, {\n    type: 5,\n    value: stats.all_ride_totals.count,\n    label: \"total rides\",\n    unit: \"rides\"\n  }), __jsx(StatCard, {\n    type: 2,\n    value: Math.floor(stats.all_ride_totals.distance / 1000).toLocaleString(),\n    label: \"total distance\",\n    unit: \"km\"\n  }), __jsx(StatCard, {\n    type: 1,\n    value: Math.floor(stats.all_ride_totals.elevation_gain).toLocaleString(),\n    label: \"Elevation gain\",\n    unit: \"m\"\n  }), __jsx(StatCard, {\n    type: 4,\n    value: totalMovingTime,\n    label: \"Total time\",\n    unit: \"hours\"\n  }))))));\n};\n\nexport default Stats;","map":null,"metadata":{},"sourceType":"module"}