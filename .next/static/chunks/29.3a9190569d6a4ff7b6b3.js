(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[29],{Jhew:function(e,t,r){"use strict";r.r(t);var o=r("ODXe"),n=r("q1tI"),a=r.n(n),i=r("4ZJM"),c=r.n(i),u=r("UEtB"),p=r.n(u),s=r("krAY"),d=r.n(s),l=a.a.createElement,y={top:0,bottom:0,width:"100%",position:"absolute"};t.default=function(e){var t=a.a.useRef(null),r=a.a.useState(null),n=Object(o.a)(r,2),i=(n[0],n[1]),u=d()("(prefers-color-scheme: dark)"),s=p.a.toGeoJSON(e.activitySummary.map.polyline).coordinates;return c.a.accessToken="pk.eyJ1IjoicDBwbWFrZXIiLCJhIjoiY2lzOXliOGlrMDA2ODJ5bzJ4YjNnb29qdSJ9.hf19Sca7oYCcR8kRlx07Rw",a.a.useEffect((function(){var r,o;window.matchMedia("(prefers-color-scheme: dark)").matches;r=u?"mapbox://styles/mapbox/dark-v10":"mapbox://styles/p0pmaker/cjrf0kzjd4xde2tqwor6ltd0u";o||function(t){var n=t.setMap,a=t.mapContainer;(o=new c.a.Map({container:a.current,style:r,center:[e.activitySummary.start_latlng[1],e.activitySummary.start_latlng[0]],zoom:10})).on("load",(function(){n(o),o.resize(),o.addLayer({id:"start",type:"circle",source:{type:"geojson",data:{type:"Feature",properties:{description:"Activitiy Start"},geometry:{type:"Point",coordinates:s[0]}}},paint:{"circle-color":"#f03434","circle-radius":10,"circle-opacity":1}}),o.addLayer({id:"end",type:"circle",source:{type:"geojson",data:{type:"Feature",properties:{description:"Activitiy End"},geometry:{type:"Point",coordinates:s.pop()}}},paint:{"circle-color":"#479C1F","circle-radius":10,"circle-opacity":1}}),o.addLayer({id:"route",type:"line",source:{type:"geojson",data:{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:s}}},layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#0a67f2","line-width":2}});var e=s,t=e.reduce((function(e,t){return e.extend(t)}),new c.a.LngLatBounds(e[0],e[0]));o.fitBounds(t,{padding:80})}))}({setMap:i,mapContainer:t})}),[u]),l("div",{style:y,ref:function(e){return t.current=e}})}},UEtB:function(e,t,r){"use strict";var o={};function n(e){return Math.floor(Math.abs(e)+.5)*(e>=0?1:-1)}function a(e,t,r){var o=(e=n(e*r))-(t=n(t*r));o<<=1,e-t<0&&(o=~o);for(var a="";o>=32;)a+=String.fromCharCode(63+(32|31&o)),o>>=5;return a+=String.fromCharCode(o+63)}function i(e){for(var t=[],r=0;r<e.length;r++){var o=e[r].slice();t.push([o[1],o[0]])}return t}o.decode=function(e,t){for(var r,o=0,n=0,a=0,i=[],c=0,u=0,p=null,s=Math.pow(10,Number.isInteger(t)?t:5);o<e.length;){p=null,c=0,u=0;do{u|=(31&(p=e.charCodeAt(o++)-63))<<c,c+=5}while(p>=32);r=1&u?~(u>>1):u>>1,c=u=0;do{u|=(31&(p=e.charCodeAt(o++)-63))<<c,c+=5}while(p>=32);n+=r,a+=1&u?~(u>>1):u>>1,i.push([n/s,a/s])}return i},o.encode=function(e,t){if(!e.length)return"";for(var r=Math.pow(10,Number.isInteger(t)?t:5),o=a(e[0][0],0,r)+a(e[0][1],0,r),n=1;n<e.length;n++){var i=e[n],c=e[n-1];o+=a(i[0],c[0],r),o+=a(i[1],c[1],r)}return o},o.fromGeoJSON=function(e,t){if(e&&"Feature"===e.type&&(e=e.geometry),!e||"LineString"!==e.type)throw new Error("Input must be a GeoJSON LineString");return o.encode(i(e.coordinates),t)},o.toGeoJSON=function(e,t){return{type:"LineString",coordinates:i(o.decode(e,t))}},e.exports&&(e.exports=o)}}]);